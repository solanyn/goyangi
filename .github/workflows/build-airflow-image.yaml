name: Build airflow image with dependencies

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - "airflow/**"
    
jobs:
  airflow:
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Git Version
        id: version
        uses: codacy/git-version@2.8.0
        with:
          release-branch: main
          minor-identifier: feat
          major-identifier: feat!
          log-paths: airflow/
          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          file: ./airflow/Dockerfile
          context: .
          platforms: linux/amd64
          cache-from: type=registry,ref=ghcr.io/solanyn/build_cache:airflow-amd64,mode=max
          cache-to: type=registry,ref=ghcr.io/solanyn/build_cache:airflow-amd64
          outputs: type=image,name=ghcr.io/solanyn/airflow,push-by-digest=true,name-canonical=true,push=true
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/solanyn/airflow
          tags: |
            type=match,pattern=^v?(\d+(\.\d+)?(\.\d+)?(\.\d+)?),value=${{ steps.version.outputs.version }}
            type=match,pattern=^v?(\d+(\.\d+)),value=${{ steps.version.outputs.version }},enable=${{ steps.version.outputs.version }}
            type=match,pattern=^v?(\d+),value=${{ steps.version.outputs.version }},enable=${{ steps.version.outputs.version }}
            type=raw,value=rolling

      - name: Push Images
        id: push
        uses: Noelware/docker-manifest-action@b33ab348026b120a895167160f5605b0197f0862 # 0.4.3
        with:
          inputs: ${{ join(fromJSON(steps.meta.outputs.json).tags, ',') }}
          images: >-
            ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}@${{ needs.build.outputs.amd64 }}
          push: true
