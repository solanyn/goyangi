name: Bazel
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  packages: write
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true
      - name: Build all targets
        run: bazel build //... --config=ci
      - name: Test all targets
        run: bazel test //... --config=ci
      - name: Run container structure tests
        run: bazel test $(bazel query 'kind("container_structure_test", //...)') --config=ci

  push-images:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ github.token }}"
      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true
      - name: Push all OCI images
        run: |
          # Get monorepo version
          MONOREPO_VERSION=$(./tools/get-version.sh .)

          # Find and run all oci_push targets
          OCI_TARGETS=$(bazel query 'kind("oci_push", //...)' --config=ci)

          for target in $OCI_TARGETS; do
            echo "Pushing $target"
            # Push with latest tag (defined in BUILD.bazel)
            bazel run $target --config=ci
            
            # Push with version tag
            bazel run $target --config=ci -- --tag $MONOREPO_VERSION
          done
