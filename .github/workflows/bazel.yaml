name: Bazel
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  packages: write
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true
      - name: Build all targets
        run: bazel build //... --config=ci
      - name: Test all targets
        run: bazel test //... --config=ci

  push-images:
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            bazel-platform: //platforms:linux_amd64
          - runner: ubuntu-24.04-arm
            bazel-platform: //platforms:linux_arm64
    runs-on: ${{ matrix.platform.runner }}
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ github.token }}"
      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true
      - name: Push all OCI images for ${{ matrix.platform.bazel-platform }}
        run: |
          MONOREPO_VERSION=$(./tools/get-version.sh .)
          OCI_TARGETS=$(bazel query 'kind("oci_push", //...)' --config=ci 2>/dev/null || echo "")

          if [ -z "$OCI_TARGETS" ]; then
            echo "No OCI push targets found, skipping container push"
            exit 0
          fi

          if [[ "${{ matrix.platform.bazel-platform }}" == "//platforms:linux_amd64" ]]; then
            PLATFORM_SUFFIX="linux-amd64"
          elif [[ "${{ matrix.platform.bazel-platform }}" == "//platforms:linux_arm64" ]]; then
            PLATFORM_SUFFIX="linux-arm64"
          else
            echo "Unknown platform: ${{ matrix.platform.bazel-platform }}"
            exit 1
          fi

          for target in $OCI_TARGETS; do
            echo "Pushing $target for ${{ matrix.platform.bazel-platform }}"
            bazel run $target --config=ci --platforms=${{ matrix.platform.bazel-platform }}
            bazel run $target --config=ci --platforms=${{ matrix.platform.bazel-platform }} -- --tag latest-$PLATFORM_SUFFIX
            bazel run $target --config=ci --platforms=${{ matrix.platform.bazel-platform }} -- --tag $MONOREPO_VERSION-$PLATFORM_SUFFIX
          done

  create-manifest:
    runs-on: ubuntu-latest
    needs: push-images
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ github.token }}"
      - name: Create multi-platform manifest
        run: |
          MONOREPO_VERSION=$(./tools/get-version.sh .)

          docker buildx imagetools create \
            --tag ghcr.io/solanyn/gt7-telemetry:latest \
            ghcr.io/solanyn/gt7-telemetry:latest-linux-amd64 \
            ghcr.io/solanyn/gt7-telemetry:latest-linux-arm64
            
          docker buildx imagetools create \
            --tag ghcr.io/solanyn/gt7-telemetry:$MONOREPO_VERSION \
            ghcr.io/solanyn/gt7-telemetry:$MONOREPO_VERSION-linux-amd64 \
            ghcr.io/solanyn/gt7-telemetry:$MONOREPO_VERSION-linux-arm64
