load("@aspect_bazel_lib//lib:expand_template.bzl", "expand_template")
load("@aspect_bazel_lib//lib:tar.bzl", "tar")
load("@aspect_rules_py//py:defs.bzl", "py_library", "py_binary")
load("@buildx//:defs.bzl", "buildx", "context")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load", "oci_push")
load("@container_structure_test//:defs.bzl", "container_structure_test")
load("@rules_uv//uv:pip.bzl", "pip_compile")

py_library(
    name = "lib",
    srcs = [
        "config.py",
        "health.py",
        "printer.py",
        "scheduler.py",
    ],
    deps = [
        "@cronprint_deps//fastapi:pkg",
        "@cronprint_deps//uvicorn:pkg",
        "@cronprint_deps//apscheduler:pkg",
        "@cronprint_deps//pycups:pkg",
        "@cronprint_deps//requests:pkg",
    ],
)

py_binary(
    name = "app",
    main = "main.py",
    imports = ["."],
    srcs = ["main.py"],
    deps = [":lib"],
)

pip_compile(
    name = "requirements",
    requirements_in = "requirements.txt",
    requirements_txt = "requirements_lock.txt",
    visibility = ["//visibility:public"],
)

buildx(
    name = "base_image",
    build_context = [
        context.oci_layout(
            "ghcr.io/astral-sh/uv:python3.13-bookworm-slim",
            "@python_3_13-bookworm-slim",
        ),
        context.sources(
            "requirements",
            [":requirements_lock.txt"],
            override_path = "cronprint",
        ),
        context.sources(
            "cups",
            [":cupsd.conf"],
            override_path = "cronprint",
        ),
        context.sources(
            "app",
            ["//cronprint:app"],
            override_path = "cronprint",
        ),
    ],
    dockerfile = ":Dockerfile",
)

oci_image(
    name = "image",
    base = ":base_image",
)

container_structure_test(
    name = "container_test",
    configs = ["tests.yaml"],
    image = ":image",
    visibility = ["//visibility:public"],
    size="small",
)

expand_template(
    name = "stamped_tags",
    out = "_stamped_tags.txt",
    template = ["latest\n{{VERSION}}"],
    stamp_substitutions = {
        "{{VERSION}}": "{{STABLE_VERSION}}",
    },
)

oci_load(
    name = "load",
    image = ":image",
    repo_tags = ["ghcr.io/solanyn/cronprint:latest"],
    visibility = ["//visibility:public"],
)

oci_push(
    name = "push",
    image = ":image",
    repository = "ghcr.io/solanyn/cronprint",
    remote_tags = ":stamped_tags",
    visibility = ["//visibility:public"],
)
