load("@aspect_rules_py//py:defs.bzl", "py_binary")
load("@rules_uv//uv:pip.bzl", "pip_compile")
load("@rules_multirun//:defs.bzl", "multirun")

py_binary(
    name = "main",
    srcs = ["main.py"],
    main = "main.py",
    deps = [
        "@torches_deps//torch:pkg",
        "@torches_deps//numpy:pkg",
    ],
)

pip_compile(
    name = "requirements_gpu",
    requirements_in = "requirements_gpu.txt",
    requirements_txt = "requirements_gpu_lock.txt",
)

pip_compile(
    name = "requirements_darwin",
    requirements_in = "requirements_darwin.txt",
    requirements_txt = "requirements_darwin_lock.txt",
)

multirun(
    name = "requirements",
    commands = [
        ":requirements_gpu",
        ":requirements_darwin",
    ],
    # Running in a single threaded mode allows consecutive `uv` invocations to benefit
    # from the `uv` cache from the first run.
    jobs = 1,
    visibility = ["//visibility:public"],
)
