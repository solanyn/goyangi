load("@rules_uv//uv:pip.bzl", "pip_compile")
load("@rules_uv//uv:venv.bzl", "create_venv")
load("@rules_multirun//:defs.bzl", "multirun")
load("@buildx//:defs.bzl", "buildx", "context")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")

pip_compile(
    name = "requirements",
    requirements_in = "requirements.txt",
    requirements_txt = "requirements_lock.txt",
    visibility = ["//visibility:public"],
)

create_venv(
    name = "venv",
    requirements_txt = ":requirements_lock.txt",
    destination_folder = ".venv",
)

buildx(
    name = "base_image",
    build_context = [
        context.oci_layout(
            "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
            "@python_3_12-bookworm-slim",
        ),
        context.sources(
            "requirements",
            ["requirements_gpu.txt"],
            override_path = "torches",
        ),
        context.sources(
            "torcheslib",
            glob(["*.py"]),
            override_path = "torches",
        ),
    ],
    dockerfile = ":Dockerfile",
)

oci_image(
    name = "image",
    base = ":base_image",
)

oci_load(
    name = "load",
    image = ":image",
    repo_tags = ["ghcr.io/solanyn/torches:latest"],
)
