load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")

go_library(
    name = "server_lib",
    srcs = ["main.go"],
    importpath = "github.com/solanyn/goyangi/tldr/backend/cmd/server",
    visibility = ["//visibility:private"],
    deps = [
        "//tldr/backend/internal/config",
        "//tldr/backend/internal/router",
    ],
)

go_binary(
    name = "server",
    embed = [":server_lib"],
    visibility = ["//visibility:public"],
)

# Container image for the Go backend server
oci_image(
    name = "server_image",
    base = "@distroless_base",
    entrypoint = ["/server"],
    tars = [":server_tar"],
    visibility = ["//visibility:public"],
)

# Package the binary as a tar for the container
genrule(
    name = "server_tar",
    srcs = [":server"],
    outs = ["server.tar"],
    cmd = "tar -cf $@ -C $$(dirname $(location :server)) $$(basename $(location :server))",
    visibility = ["//visibility:private"],
)

# Export container as tarball for docker load
oci_load(
    name = "server_tarball", 
    image = ":server_image",
    repo_tags = ["tldr-backend:latest"],
    visibility = ["//visibility:public"],
)
