load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")

# Core telemetry library
rust_library(
    name = "gt7_telemetry_core",
    srcs = [
        "src/config.rs",
        "src/constants.rs",
        "src/cypher.rs",
        "src/errors.rs",
        "src/flags.rs",
        "src/heartbeat.rs",
        "src/lib.rs",
        "src/packet.rs",
    ],
    edition = "2021",
    visibility = ["//visibility:public"],
    deps = [
        "@crate_index//:bitflags",
        "@crate_index//:byteorder",
        "@crate_index//:log",
        "@crate_index//:salsa20",
        "@crate_index//:serde",
        "@crate_index//:serde_json",
        "@crate_index//:thiserror",
    ],
)

# Main telemetry server binary
rust_binary(
    name = "telemetry_server",
    srcs = [
        "src/http_server.rs",
        "src/main.rs",
        "src/pulsar_handler.rs",
        "src/telemetry_loop.rs",
    ],
    edition = "2021",
    env = {
        "PROTOC": "$(execpath @protobuf//:protoc)",
    },
    tools = ["@protobuf//:protoc"],
    visibility = ["//visibility:public"],
    deps = [
        ":gt7_telemetry_core",
        "@crate_index//:axum",
        "@crate_index//:axum-extra",
        "@crate_index//:env_logger",
        "@crate_index//:futures-util",
        "@crate_index//:log",
        "@crate_index//:pulsar",
        "@crate_index//:rustls",
        "@crate_index//:rustls-pemfile",
        "@crate_index//:serde_json",
        "@crate_index//:tokio",
    ],
)

# Container image for the Rust telemetry service
oci_image(
    name = "telemetry_image",
    base = "@distroless_base",
    entrypoint = ["/telemetry_server"],
    tars = [":telemetry_server_tar"],
    visibility = ["//visibility:public"],
)

# Package the binary as a tar for the container
genrule(
    name = "telemetry_server_tar",
    srcs = [":telemetry_server"],
    outs = ["telemetry_server.tar"],
    cmd = "tar -cf $@ -C $$(dirname $(location :telemetry_server)) $$(basename $(location :telemetry_server))",
    visibility = ["//visibility:private"],
)

# Export container as tarball for docker load
oci_load(
    name = "telemetry_tarball",
    image = ":telemetry_image",
    repo_tags = ["gt7-telemetry-server:latest"],
    visibility = ["//visibility:public"],
)
